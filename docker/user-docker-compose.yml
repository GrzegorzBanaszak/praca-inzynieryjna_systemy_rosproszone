services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=UserDb
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  userservice:
    build:
      context: ../src/UserService
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=UserDb;Username=postgres;Password=postgres
      - JwtSettings__Key=f3Pz7dX9sL2nM6aQ1vT4rY8kU0iO5pE9jH2gB7hK4cV6xZ1bN3mL8qW2eR5tY0u
      - JwtSettings__Issuer=MyApp
      - JwtSettings__Audience=MyAppUsers
      - JwtSettings__ExpiresInMinutes=60
    ports:
      - '5002:80'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/healthz"]
      interval: 10s
      retries: 3

volumes:
  pgdata: